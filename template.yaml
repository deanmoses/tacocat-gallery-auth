# This file defines the AWS resources of the SAM serverless application
# It gets transfomed into a CloudFormation template to be deployed

AWSTemplateFormatVersion: 2010-09-09
Description: Tacocat Gallery authentication API
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  WebAppBaseURI:
    Type: String
    Default: https://localhost:5173
    Description: Root URL of the Tacocat web app, like https://pix.tacocat.com
  AuthAppDomain:
    Type: String
    Default: auth.pix.tacocat.com
    Description: Domain of this authentication app.  Must be a subdomain of WebAppBaseURI
  CognitoUserPoolID:
    Type: String
    Default: us-east-1_DdPFtamLz
  CognitoBaseURI:
    Type: String
    Default: https://tacocatgallerytest.auth.us-east-1.amazoncognito.com
  CognitoClientID:
    Type: String
    Default: 7asah0n7edj39i2b9st1fu1olo
  CognitoLoginCallbackURI:
    Type: String
    Default: /auth/login_callback
    Description: URI where Congnito sends users to after login.  This has to process the cookies.
  CognitoLogoutCallbackURI:
    Type: String
    Default: /
    Description: Path within the Tacocat web app to send users after Cognito logs them out.  Relative to WebAppBaseURI

# Globals are shared cofiguration that apply to multiple Resources
Globals:
  Api:
    Name: Tacocat Gallery Authentication API
    Domain:
      DomainName: !Ref AuthAppDomain
      CertificateArn: arn:aws:acm:us-east-1:010410881828:certificate/7ec6fa1d-6181-4b69-8ee0-df7e1f15a537
  Function:
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 100

# Resources are the AWS resources in the stack
Resources:

  # A Lambda Layer of the TypeScript library modules that Lambda functions will call
  LayerCommons:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: src/layers/commons/
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: makefile


  # Lambda for retrieving authentication status
  AuthStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: HTTP GET method to get authentication status
      Handler: src/handlers/authStatus.handler
      Layers:
        - !Ref LayerCommons
      Environment:
        Variables:
          AuthAppDomain: !Ref AuthAppDomain
          WebAppBaseURI: !Ref WebAppBaseURI
          CognitoUserPoolID: !Ref CognitoUserPoolID
          CognitoBaseURI: !Ref CognitoBaseURI
          CognitoClientID: !Ref CognitoClientID
          CognitoLoginCallbackURI: !Ref CognitoLoginCallbackURI
          CognitoLogoutCallbackURI: !Ref CognitoLogoutCallbackURI
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
    Metadata:
      BuildProperties:
        External:
          commons

  # Lambda for redirecting to the AWS Cognito login page
  RedirectToCognitoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: HTTP GET method for redirecting to the AWS Cognito login page
      Handler: src/handlers/redirectToCognito.handler
      Layers:
        - !Ref LayerCommons
      Environment:
        Variables:
          AuthAppDomain: !Ref AuthAppDomain
          WebAppBaseURI: !Ref WebAppBaseURI
          CognitoUserPoolID: !Ref CognitoUserPoolID
          CognitoBaseURI: !Ref CognitoBaseURI
          CognitoClientID: !Ref CognitoClientID
          CognitoLoginCallbackURI: !Ref CognitoLoginCallbackURI
          CognitoLogoutCallbackURI: !Ref CognitoLogoutCallbackURI
      Events:
        Api:
          Type: Api
          Properties:
            Path: /login
            Method: GET
    Metadata:
      BuildProperties:
        External:
          commons

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
